Interesting stackoverflow post: https://stackoverflow.com/questions/11016078/is-it-possible-to-create-a-function-dynamically-during-runtime-in-c

***

Interesting answer:
Yes, of course, without any tools mentioned in the other answers, but simply using the C++ compiler.

just follow these steps from within your C++ program (on linux, but must be similar on other OS)

write a C++ program into a file (e.g. in /tmp/prog.cc), using an ofstream
compile the program via system("c++ /tmp/prog.cc -o /tmp/prog.so -shared -fPIC");
load the program dynamically, e.g. using dlopen()

***

Interesting project:
https://bellard.org/tcc/

***

After reading DSP book (not Oppenheim) I thought to myself:
 consider doing bit depth conversion by using round-to-nearest.

***

Spark and Hadoop are too complicated to do the distributed computation I want to do here; write your own fault-tolerant job scheduling code

***

Current code requires creation/deletion of a class extending Module and
    creation/deletion of a case for the addModule method of Patch when 
    creating or removing a type of Module from the program.

***

Commands for making JNI work:

g++-9 -shared -fPIC -O3 -I/usr/lib/jvm/java-12-openjdk-amd64/include -I/usr/lib/jvm/java-12-openjdk-amd64/include/linux la_*.cpp -o libnative.so

javac ./la/jitco/jana/*.java -h .

java -cp . -Djava.library.path=./la/jitco/jana la.jitco.jana.ParallelRenderer
